<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <script src="/javascripts/he.js"></script>
    <script src="/javascripts/htmlparser.js"></script>
  </head>
  <body>
    <h1><%= title %></h1>
    <p>Welcome to <%= title %></p>

    <textarea id="oTxt" name="name" rows="8" cols="80">
      <p>XSS<img src="null" alt="" onerror="alert('1');" /></p>
    </textarea>

    <button id="oComment" name="button">评论</button>
    <button id="oGetComment" name="button">获取评论</button>

    <script>
      var oTxt = document.getElementById('oTxt');
      var oComment = document.getElementById('oComment');
      var oGetComment = document.getElementById('oGetComment');

      oComment.onclick = function () {
        var url = '/comment?comment=' + oTxt.value;
        var ajax = new XMLHttpRequest();
        ajax.open('GET', url, true);
        ajax.onreadystatechange = function () {
          if (ajax.readyState == 4) {
            if ((ajax.status >= 200 && ajax.status <= 300) || ajax.status == 304) {
              console.log('succ');
            } else {
              console.log('erro');
            }
          }
        };
        ajax.send();
      };

      oGetComment.onClick = function () {
        var url = '/getComment';
        var ajax = new XMLHttpRequest();
        ajax.open('GET', url, true);
        ajax.send();
        ajax.onreadystatechange = function () {
          if (ajax.readyState == 4) {
            if ((ajax.status >= 200 && ajax.status <= 300) || ajax.status == 304) {
              var comments = parse(JSON.parse(ajax.response).comment);
              // console.log(comments);
              var oTxt = document.createElement('span');
              oTxt.innerHTML = comments;
              document.body.appendChild(oTxt);
            } else {
              console.log('erro');
            }
          }
        };
      };

      function filter_tag(tag) {
        return (tag === 'script' || tag === 'style' || tag === 'link' || tag === 'iframe' || tag === 'frame' || tag === 'img');
      }

      // 进行解码、过滤和校正
      function parse(str) {
        var result = '';
        try {
          // 使用 he.unescape(str, {strict: true} 进行解码（反转义）
          HTMLParser(he.unescape(str, {strict: true}), { // 使用 HTMLParser 方法，将反转义后的字符串解析成 DOM 对象
            // DOM 标签的开始部分被 start 函数收集起来
            // tag: 标签，attrs：属性，unary: 是否是单标签
            start: function (tag, attrs, unary) {
              if (filter_tag(tag)) return;
              result += '<' + tag;
              // 添加元素属性，不添加的话就相当于过滤掉了各种事件
              // for (var i = 0, len = attrs.length; i < len; i++) {
              //   result += ' ' + attrs[i].name + '="' + attrs[i].escaped + '"';  
              // }
              result += ' ' + (unary ? '/' : '') + '>'; // 是单标签的话自闭合
            },
            end: function (tag) {
              result += '</' + tag + '>';
            },
            chars: function (text) {
              result += text;
            },
            comment: function (text) {
              result += '<!--' + text + '-->';
            }
          });

          return result;       
        } catch (e) {
          console.log(e);
        }
      }
    </script>
  </body>
</html>
